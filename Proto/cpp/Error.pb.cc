// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Error.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Error.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ErrorCode {

namespace {

const ::google::protobuf::EnumDescriptor* Code_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_Error_2eproto() {
  protobuf_AddDesc_Error_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Error.proto");
  GOOGLE_CHECK(file != NULL);
  Code_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Error_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_Error_2eproto() {
}

void protobuf_AddDesc_Error_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013Error.proto\022\tErrorCode*\215\003\n\004Code\022\014\n\010ERR"
    "_NONE\020\000\022\027\n\023ERR_VERSION_INVALID\020\001\022\027\n\022ERR_"
    "PLAYER_INVALID\020\350\007\022\032\n\025ERR_PLAYER_INVALID_"
    "ID\020\351\007\022\034\n\027ERR_PLAYER_INVALID_GUID\020\352\007\022\033\n\026E"
    "RR_PLAYER_STATE_LOGIN\020\353\007\022\027\n\022ERR_PLAYER_I"
    "N_GAME\020\354\007\022\030\n\023ERR_PLAYER_OUT_GAME\020\355\007\022\025\n\020E"
    "RR_GAME_INVALID\020\320\017\022\030\n\023ERR_GAME_INVALID_I"
    "D\020\321\017\022\023\n\016ERR_GAME_USING\020\322\017\022\023\n\016ERR_GAME_EM"
    "PTY\020\323\017\022\022\n\rERR_GAME_FULL\020\324\017\022\026\n\021ERR_GAME_P"
    "ASSWORD\020\325\017\022\024\n\017ERR_SERVER_FULL\020\270\027\022\036\n\031ERR_"
    "GAMEPLAY_INVALID_MODE\020\240\037B\002H\001", 428);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Error.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Error_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Error_2eproto {
  StaticDescriptorInitializer_Error_2eproto() {
    protobuf_AddDesc_Error_2eproto();
  }
} static_descriptor_initializer_Error_2eproto_;
const ::google::protobuf::EnumDescriptor* Code_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Code_descriptor_;
}
bool Code_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 1000:
    case 1001:
    case 1002:
    case 1003:
    case 1004:
    case 1005:
    case 2000:
    case 2001:
    case 2002:
    case 2003:
    case 2004:
    case 2005:
    case 3000:
    case 4000:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ErrorCode

// @@protoc_insertion_point(global_scope)
