option optimize_for = SPEED;
package ProtoGameServer;

enum VERSION_NUMBER
{
	VERSION = 0x00010000;
}

enum FLAGS_CODE
{
	PLAYER_FLAGS_NONE = 0x00000000;
	PLAYER_FLAGS_LOGIN = 0x00000001;
	PLAYER_FLAGS_READY = 0x00000002;
	PLAYER_FLAGS_GAMING = 0x00000004;
}

enum ERROR_CODE
{
	ERR_NONE = 0;

	ERR_VERSION_INVALID = 1;

	ERR_PLAYER_INVALID = 1000;
	ERR_PLAYER_INVALID_GUID = 1001;
	ERR_PLAYER_FLAGS_NOT_NONE = 1002;
	ERR_PLAYER_FLAGS_NOT_LOGIN = 1003;
	ERR_PLAYER_FLAGS_NOT_INGAME = 1004;
	ERR_PLAYER_FLAGS_INGAME = 1005;
	ERR_PLAYER_NOT_HOST = 1006;

	ERR_GAME_INVALID = 2000;
	ERR_GAME_INVALID_ID = 2001;
	ERR_GAME_USING = 2002;
	ERR_GAME_EMPTY = 2003;
	ERR_GAME_FULL = 2004;
	ERR_GAME_PASSWORD = 2005;

	ERR_SERVER_FULL = 3000;

	ERR_GAMEPLAY_INVALID_MODE = 4000;
}

enum RESPONSE_MSG
{
	HEART = 1000;
	FLAGS = 1001;
	LOGIN = 1002;
	READY = 1003;
	LIST_GAME = 1004;
	CREATE_GAME = 1005;
	DESTROY_GAME = 1006;
	ENTER_GAME = 1007;
	EXIT_GAME = 1008;
	SEND_TO_PLAYER = 1009;
}

message Heart
{
	required int32 timestamp = 1;
}

message Flags
{
	required uint32 flags = 1;
}

message Login
{
	required ERROR_CODE err = 1;
	optional uint32 guid = 2;
}

message ListGame
{
	message Game
	{
		required bool private = 1;
		required int32 gameid = 2;
		required int32 mode = 3;
		required int32 mapid = 4;
		required int32 curPlayers = 5;
		required int32 maxPlayers = 6;
		required int32 evaluation = 7;
	}
	
	required ERROR_CODE err = 1;
	repeated Game games = 2;
}

message CreateGame
{
	required ERROR_CODE err = 1;
	optional uint32 host = 2;
	optional uint32 gameid = 3;
}

message DestroyGame
{
	required ERROR_CODE err = 1;
}

message EnterGame
{
	required ERROR_CODE err = 1;
	optional uint32 guid = 2;
	optional uint32 host = 3;
	optional uint32 gameid = 4;
}

message ExitGame
{
	required ERROR_CODE err = 1;
	optional uint32 guid = 2;
	optional uint32 host = 3;
}

message SendToPlayer
{
	required int32 size = 1;
	required bytes data = 2;
}



enum REQUEST_MSG
{
	SERVER_STATUS = 2000;
}

message ServerStatus
{
	message Game
	{
		required bool empty = 1;
		required int32 gameid = 2;
		required int32 mode = 3;
		required int32 mapid = 4;
		required int32 evaluation = 5;
	}
	
	required string ip = 1;
	required int32 port = 2;
	required int32 curGames = 3;
	required int32 maxGames = 4;
	repeated Game games = 5;
}